services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    environment:
      - FLASK_ENV=development
      - FLASK_APP=src/app.py
      - FLASK_DEBUG=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CACHE_EXPIRATION=3600
      # Threat Intelligence Configuration
      - FEED_UPDATE_INTERVAL=21600
      - FEED_CACHE_DURATION=86400
      - PHISHTANK_URL=https://data.phishtank.com/data/online-valid.json
      - OPENPHISH_URL=https://openphish.com/feed.txt
      - URLHAUS_URL=https://urlhaus.abuse.ch/downloads/text_recent/
      # Risk Scoring Weights
      - WEIGHT_DOMAIN_AGE=0.8
      - WEIGHT_SSL=0.4
      - WEIGHT_URL_PATTERNS=0.15
      - WHITELIST_REDUCTION_FACTOR=0.5
    command: flask run --host=0.0.0.0 --port=8000
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - url_analyzer_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - url_analyzer_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  url_analyzer_network:
    driver: bridge